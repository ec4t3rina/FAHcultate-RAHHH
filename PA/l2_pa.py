# -*- coding: utf-8 -*-
"""L2_PA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hhr6EnoENKMpawcxVz0pWGzb5_lrmn4C

TREBUIE SA NE UITAM LA DOCUMENTATION!!!! - relevant la examen
(e greu sa ne incadram in 1h30 + de sort out la buguri in a timely manner)
"""

s = "mama are mere"
print(s.find('re', 8))

s = "mama are mere"
print(s.count('w'))

t = s.replace('a', 'w', 2) #face primele 2 aparitii
print(t)

s = "mama are mere"
print(s.find('qe'))

s = "mama are mere"
try:
    print(s.index('qe')) #facem cu try ca sa nu dea ceva ciudat - iin mod normal ar da ValueError
except:
    a = input()

s = "1234"
print(s.isdigit())

s = "123a4"
print(s.isdigit())

s = "mama"
s[0] = 'M' #nu poti sa faci asta
print(s)

print(int('A')) #nu merge asa

s = "algoritm"
print(s[1:])
print(s[1:-1])
print(s[1:7])
print(s[1:-7])
print(s[1:-6])

print(s[1:-1:2])

"""======================= EXERCITII ======================="""

#E1
s = "aBc"
t = s.upper()
print(t)

print("hello".isupper())
print("HELLO".isupper())
print("hello".isupper())
print(" ".isupper())
print("salut Salut".isupper())
print("HELLO WORLD!".isupper())

print('Python'.center(10))
print('Python'.center(9))
print('Python'.center(16))
print('Python'.center(10, '-'))
print('Python'.center(4))

#E2

s = input()

while len(s) > 0:
    print(s.center(10))
    s = s[1:-1]

#E3

s = input() #abccabcababcc
t = input()

while (s.find(t) != -1):
    miau = s.find(t)
    print(miau)
    s = s[:miau] + '*' + s[miau+1:]

#E4.a

prop = input() #Problemele cu șiruri de caracteger nu sunt ggerle!
s = input() #re
t = input() #ger

while (prop.find(t)!=-1):
    miau = prop.find(t)
    prop = prop[:miau] + s + prop[miau+len(t):]

print(prop)

#E4.b

prop = input() #Problemele cu șiruri de caracteger nu sunt ggerle!
p = int(input())
s = input() #re
t = input() #ger

cnt = 0
while ((prop.find(t)!=-1) & (cnt<p)):
    miau = prop.find(t)
    prop = prop[:miau] + s + prop[miau+len(t):]
    cnt = cnt+1

if (prop.find(t)!=-1):
    print(f"textul contine prea multe greseli, doar {p} au fost corectate")
else:
    print(prop)

#E5.a

prop = input()
s = input()
t = input()

poz = 0
while (prop[poz:].find(s)!=-1):
  newp = prop[poz:].find(s) + poz #de fapt pozitia in propozitie
  if (((newp == 0) and (newp + len(s) < len(prop) and prop[newp + len(s)].isspace()==True)) or
      ((newp != 0) and (newp - 1 >= 0 and prop[newp - 1].isspace()==True) and
       ((newp + len(s) == len(prop)) or
        (newp + len(s) < len(prop) and prop[newp + len(s)].isspace()==True)))):
      prop = prop[:newp] + t + prop[newp+len(s):]
      poz = newp + len(t)
  else:
      poz = newp + 1

print(prop)

#E5.a

prop = input()
s = input()
t = input()

p = prop.split()
for i in range(len(p)):
    if p[i]==s:
      p[i] = t

prop = " ".join(p)

print(prop)

#E5.b

prop = input() #aabc abc, cabc abc? abc! abc
s = input()
t = input()

punct = "!#$%&'()*+,-./:;<=>\"\'?@[\]^_`{|}~ "

poz = 0
while (prop[poz:].find(s)!=-1):
  newp = prop[poz:].find(s) + poz #de fapt pozitia in propozitie
  if (((newp == 0) and (newp + len(s) < len(prop) and punct.find(prop[newp + len(s)])!=-1)) or
      ((newp != 0) and (newp - 1 >= 0 and punct.find(prop[newp - 1])!=-1) and
       ((newp + len(s) == len(prop)) or
        (newp + len(s) < len(prop) and punct.find(prop[newp + len(s)])!=-1)))):
      prop = prop[:newp] + t + prop[newp+len(s):]
      poz = newp + len(t)
  else:
      poz = newp + 1

print(prop)